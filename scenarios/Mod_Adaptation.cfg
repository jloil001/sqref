/// This example scenario defines two CR's that will adapt their transmit modulation
/// scheme based on feedback from the receiver. A dynamic interferer is introduced
/// to make adaptation more important.

// general scenario parameters
num_nodes = 3;
run_time = 20.0;

// Node 1
node1: {
    // general node parameters
    type = "CR";
    cr_type = "ecr";
    CORNET_IP = "192.168.1.14";
    
    // virtual network parameters
    CRTS_IP = "10.0.0.2";
    TARGET_IP = "10.0.0.3";
    
    // cogntive engine parameters
    CE = "CE_Mod_Adaptation";
    ce_timeout_ms = 200.0;
    
    // log/print settings
    print_metrics = 1;
    log_phy_rx = 1;
	log_phy_tx = 1;
	log_net_rx = 1;
	phy_rx_log_file = "Mod_Adaptation_N1_PHY_RX";
	phy_tx_log_file = "Mod_Adaptation_N1_PHY_TX";
	net_rx_log_file = "Mod_Adaptation_N1_NET_RX";
	generate_octave_logs = 1;
    generate_python_logs = 0;

    // initial USRP settings
    tx_freq = 770e6;
    tx_rate = 1e6;
    tx_gain = 20.0;
    rx_freq = 870e6;
    rx_rate = 1e6;
    rx_gain = 20.0;
};

// Node 2
node2: {
    // general node parameters
    type = "CR";
    cr_type = "ecr";
    CORNET_IP = "192.168.1.15";

    // virtual network parameters
    CRTS_IP = "10.0.0.3";
    TARGET_IP = "10.0.0.2";
    
    // cognitive engine parameters
    CE = "CE_Mod_Adaptation";
    ce_timeout_ms = 200.0;
    
    // log/print settings
    print_metrics = 1;
    log_phy_rx = 1;
	log_phy_tx = 1;
	log_net_rx = 1;
	phy_rx_log_file = "Mod_Adaptation_N2_PHY_RX";
	phy_tx_log_file = "Mod_Adaptation_N2_PHY_TX";
	net_rx_log_file = "Mod_Adaptation_N2_NET_RX";
	generate_octave_logs = 1;
    generate_python_logs = 0;

    // initial USRP settings
    tx_freq = 870e6;
    tx_rate = 1e6;
    tx_gain = 20.0;
    rx_freq = 770e6;
    rx_rate = 1e6;
    rx_gain = 20.0;
};

// Node 3
node3: {
    // general node parameters
    type = "interferer";
    CORNET_IP = "192.168.1.16";
    log_phy_tx = 1;
	phy_tx_log_file = "Mod_Adaptation_N3_PHY_TX";
	generate_octave_logs = 1;
    generate_python_logs = 0;

    // initial usrp settings
    tx_freq = 770e6;
    tx_rate = 1e6;
    tx_gain = 0.0;
	tx_gain_soft = -3.0;

	// interferer settings
    interference_type = "CW";
    period = 10.0;
    duty_cycle = 0.5;
    tx_freq_hop_type = "NONE";
};







